<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.BookMapper">
	<resultMap id="userMap" type="model.UserInfo">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
	</resultMap>

	<select id="selectByUsername" parameterType="java.lang.String"
		resultMap="userMap">
		select
		id,username,password
		from userinfo
		where username = #{username,jdbcType=VARCHAR}
	</select>


	<select id="selectByUser" parameterType="model.UserInfo"
		resultMap="userMap">
		select
		id,username,password
		from userinfo
		where 1 = 1
		<if test="id!=0 and !&quot;&quot;.equals(username.trim())">and username=#{username}</if>
		<if test="id!=0 and !&quot;&quot;.equals(username.trim())">and id=#{id}</if>
	</select>

	<delete id="deleteOne" parameterType="java.lang.Integer">
		delete from userinfo where id = #{_parameter}
	</delete>

	<delete id="deleteBatch" parameterType="java.util.List">
		delete from userinfo where id in (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		)
	</delete>

	<resultMap type="model.BookBean" id="bookbean">
		<id column="idbook" jdbcType="INTEGER" property="idbook" />
		<result column="bookname" jdbcType="VARCHAR" property="bookname" />
		<result column="bookwriter" jdbcType="VARCHAR" property="bookwriter" />
		<!-- 子表集合 -->
		<collection property="bookdetails" resultMap="bookdetail"></collection>
	</resultMap>
 	<resultMap type="model.BookDetailBean" id="bookdetail">
 		<id column="idreal" jdbcType="INTEGER" property="idreal" />
			<result column="bookcontent" jdbcType="VARCHAR" property="bookcontent" />
			<result column="idbookdetail" jdbcType="INTEGER" property="idbookdetail" />
 	 </resultMap> 

	<select id="selectBookBean" parameterType="model.BookBean"
		resultMap="bookbean">
		select a.idbook,a.bookname,a.bookwriter,b.idbookdetail,b.bookcontent,b.idreal
		from booklist a left join bookdetail b on a.idbook = b.idbookdetail
		<where>
			<if test="bookname!=null and !&quot;&quot;.equals(bookname.trim())">
				and a.bookname = #{bookname}
			</if>
			<if test="idbook!=0">
				and a.idbook =#{idbook}
			</if>
		</where>
		order by a.idbook
	</select>



</mapper>